datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  username    String        @id
  displayName String
  email       String        @unique
  group       String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  deactivated Boolean       @default(false)
  dnsRecord   DnsRecord[]
  certificate Certificate[]
}

model DnsRecord {
  id           Int             @id @default(autoincrement())
  username     String
  subdomain    String
  type         DnsRecordType
  value        String
  description  String?
  course       String?
  ports        String?
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt
  expiresAt    DateTime
  status       DnsRecordStatus
  lastNotified DateTime?
  user         User            @relation(fields: [username], references: [username], onDelete: Cascade)
}

model Certificate {
  id           Int               @id @default(autoincrement())
  username     String
  domain       String
  orderUrl     String?           @unique @db.VarChar(255)
  privateKey   String?           @db.Text
  certificate  String?           @db.Text
  validFrom    DateTime?          
  validTo      DateTime?
  lastNotified DateTime?
  status       CertificateStatus @default(pending)
  user         User              @relation(fields: [username], references: [username], onDelete: Cascade)
  challenge    Challenge[]
}

model Challenge {
  id            Int         @id @default(autoincrement())
  domain        String      @db.VarChar(255)
  challengeKey  String      @db.VarChar(255)
  certificateId Int
  certificate   Certificate @relation(fields: [certificateId], references: [id], onDelete: Cascade)
}

enum DnsRecordType {
  A
  AAAA
  CNAME
  TXT
}

enum DnsRecordStatus {
  active
  error
  pending
}

enum CertificateStatus {
  failed
  issued
  pending
}
