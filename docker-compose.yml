version: '3.8'

services:
  # Only for development
  database:
    image: mysql:8
    container_name: database
    ports:
      # Only for dev
      - 3306:3306
    volumes:
      # Persist data do ./mysql-data. Remove if you want to clear the db.
      - ./mysql-data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: starchart
      MYSQL_USER: starchart
      MYSQL_PASSWORD: starchart_password
      MYSQL_ROOT_PASSWORD: root_password

  # Mock Route53 server for testing, see:
  # http://docs.getmoto.org/en/latest/docs/server_mode.html
  #
  # AWS Endpoint URL: http://localhost:5053
  # Dashboard URL: http://localhost:5053/moto-api
  # Reset URL: POST to http://localhost:5053/moto-api/reset
  dns:
    container_name: route53_mock
    image: motoserver/moto:4.1.1
    ports:
      - '5053:5000'

  # Let's Encrypt test server - https://github.com/letsencrypt/pebble
  # Extra SSL Cert for testing available at: `test/resources/ca.cert.pem`
  # To use in code/tests, add to node's certificate chain via env var:
  # `cross-env NODE_EXTRA_CA_CERTS=./test/resources/ca.cert.pem node ...`
  lets_encrypt:
    image: letsencrypt/pebble:latest
    container_name: lets_encrypt
    # Use the challenge test server for our DNS challenges (we'll mock the TXT records)
    command: pebble -config /test/config/pebble-config.json -strict
    ports:
      - '14000:14000' # HTTPS ACME API
      - '15000:15000' # HTTPS Management API
    environment:
      # Skip challenge validation, see https://github.com/letsencrypt/pebble#skipping-validation
      # If we decide to implement challenges in testing:
      # https://github.com/letsencrypt/pebble/blob/main/cmd/pebble-challtestsrv/README.md
      PEBBLE_VA_ALWAYS_VALID: 1
