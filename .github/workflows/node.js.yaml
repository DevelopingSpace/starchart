name: Node.js CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
      - name: Install node modules
        run: npm ci

      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

      - name: Restore node_modules cache
        id: node_modules-cache-restore
        uses: actions/cache/restore@v3
        with:
          # path to node_modules to cache
          path: ./node_modules
          # cache module with hash of package-lock.json
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install node_modules
        # install node modules manually only if cache was not restored
        if: steps.node_modules-cache-restore.outputs.cache-hit != 'true'
        run: npm ci

      - name: Run build
        run: npm run build

      - name: Cache node_modules
        uses: actions/cache@v3
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ./node_modules
            # cache node modules using the same key as restore.
          key: ${{ steps.node_modules-cache-restore.outputs.cache-primary-key }}


      # - name: Run tests
      # run: npm test
      # - name: eslint check
      # run: npm run lint
      # - name: Run typecheck
      # run: npm run typecheck
      # - name: Prettier check
      # uses: creyD/prettier_action@v4.2
      # with:
      # prettier_options: --check .
