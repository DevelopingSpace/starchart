name: Release

on:
  push:
    branches:
      - release

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  Release:
    name: 'Release'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get major of current tag and previous tag
        id: vars
        run: |
          git fetch -a
          echo "current_version=$(git tag -l --sort -refname v* | cut -d$'\n' -f1 )" >> "$GITHUB_ENV"
          echo "previous_version=$(git tag -l --sort -refname v* | cut -d$'\n' -f2)" >> "$GITHUB_ENV"
      - name: 'Build Changelog'
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v3
        with:
          configurationJson: |
            {
              "template": "#{{CHANGELOG}}\n\n<details>\n<summary>Uncategorized</summary>\n\n#{{UNCATEGORIZED}}\n</details>",
              "categories": [
                {
                  "title": "## 🚀 Features",
                  "labels": ["feature"]
                },
                {
                  "title": "## 🐛 Fixes",
                  "labels": ["fix"]
                },
                {
                  "title": "## 🧪 Tests",
                  "labels": ["test"]
                },
                {
                    "title": "## 💬 Other",
                    "labels": ["other"]
                },
                {
                    "title": "## 📦 Dependencies",
                    "labels": ["dependencies"]
                }
              ]
            }
          commitMode: false
          fromTag: ${{env.previous_version}}
          toTag: ${{env.current_version}}
          token: ${{ github.token }}
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{steps.build_changelog.outputs.toTag}}
          tag_name: latest
          token: ${{ github.token }}
          body: ${{steps.build_changelog.outputs.changelog}}
          append_body: false

  Docker-Build-Deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE: ghcr.io/developingspace/starchart
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Define GITHUB_SHORT_SHA
        run: echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Starchart Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          build-args: |
            SAML_IDP_METADATA_PATH=./config/idp-metadata-production.xml
          push: true
          tags: ${{ env.IMAGE }}:production-sha-${{ env.GITHUB_SHA_SHORT }}, ${{ env.IMAGE }}:production

      - name: Deploy to Production via Webhook
        uses: navied/secure-actions-webhook@0.2.1
        env:
          HMAC_SECRET: ${{ secrets.WEBHOOK_PRODUCTION_SECRET }}
          TAG: production-sha-${{ env.GITHUB_SHA_SHORT }}
        with:
          url: https://mycustomdomain.senecacollege.ca/hooks/deploy
          hmacSecret: ${{ env.HMAC_SECRET }}
          data: '{"tag": "${{ env.TAG }}"}'
